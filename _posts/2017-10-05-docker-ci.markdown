---
layout: post
title: "Jenkins CI corporate with Gerrit in Docker"
title2: "本篇文章手把手指导大家如何从零开始，一步步通过 docker 手工搭建一个 Jenkins CI 环境"
date: 2017-10-05
category: docker
tags: docker jenkins gerrit
comments: true
---

### Jenkins Install

容器化，直接上 docker-compose.yml

```yml
xwind-jenkins:
  image: jenkins
  container_name: xwind-jenkins
  ports:
    - 9970:8080
  volumes:
    - /usr/local/bin/docker:/usr/bin/docker:ro
    - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose:ro
    - /etc/krb5.conf:/etc/krb5.conf:ro
    - /var/run/docker.sock:/var/run/docker.sock
    - /Users/xwind/var/jenkins_home:/var/jenkins_home
  restart: always
  environment:
    JENKINS_OPTS: --prefix=/ci
    JAVA_OPTS: -Djavax.net.ssl.trustStore=/var/jenkins_home/jssecacerts -Duser.timezone=Asia/Shanghai
    PATH: /var/jenkins_home/software/node/bin:$PATH
```

启动容器之后，就可以通过 dockerhost:9970/ci 访问 Jenkins 了，装完插件之后，会让你设置初始 admin

这里有一个比较坑的地方，docker 映射之后的目录要在本地才能加权限，jenkins 没有权限是装不了某些插件的

![](/assets/article_images/2017-10-05-docker-ci/jenkins1.png)

### Gerrit
我选择 Gerrit 作为我的代码仓库管理工具，因此我们先搭建一个 Gerrit 环境
